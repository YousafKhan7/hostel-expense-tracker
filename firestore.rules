rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }
    
    function isGroupMember(groupId) {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/groups/$(groupId)) &&
        request.auth.uid in get(/databases/$(database)/documents/groups/$(groupId)).data.memberIds;
    }
    
    function isGroupAdmin(groupId) {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/groups/$(groupId)) &&
        get(/databases/$(database)/documents/groups/$(groupId)).data.members[request.auth.uid].role == 'admin';
    }

    // Adjustments collection
    match /adjustments/{adjustmentId} {
      allow read: if isGroupMember(resource.data.groupId);
      allow create: if isGroupAdmin(request.resource.data.groupId);
      allow update, delete: if false; // Adjustments are immutable
    }

    // Settlements collection
    match /settlements/{settlementId} {
      allow read: if isGroupMember(resource.data.groupId);
      allow create: if isGroupAdmin(request.resource.data.groupId);
      allow update, delete: if false; // Settlements are immutable
    }
  }
}
